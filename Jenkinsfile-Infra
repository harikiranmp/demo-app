pipeline {
    agent any

    parameters {
        booleanParam(name: 'APPLY', defaultValue: false, description: 'Apply infrastructure?')
        booleanParam(name: 'DESTROY', defaultValue: false, description: 'Destroy infrastructure?')
    }

    stages {
        stage('Cleanup') {
            steps {
                sh 'rm -rf .terraform .terraform.lock.hcl || true'
            }
        }

        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/harikiranmp/demo-app.git'
            }
        }

        stage('Terraform Init') {
            steps {
                sh 'terraform init -input=false -reconfigure'
            }
        }

        stage('Terraform Plan') {
            when { expression { return params.APPLY == true } }
            steps {
                sh 'terraform plan -out=tfplan -input=false'
            }
        }

        stage('Terraform Apply') {
            when { expression { return params.APPLY == true } }
            steps {
                sh 'terraform apply -auto-approve tfplan'
            }
        }

        stage('Terraform Destroy') {
            when { expression { return params.DESTROY == true } }
            steps {
                echo "ðŸ’£ Destroying all Terraform-managed infrastructure..."
                sh 'terraform destroy -auto-approve -input=false'
            }
        }
    }

    post {
        always {
            sh 'terraform output || true'
        }
    }
}
